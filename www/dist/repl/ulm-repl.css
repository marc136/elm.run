/** CSS reset from https://piccalil.li/blog/a-more-modern-css-reset/ **/
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body, h1, h2, h3, h4, p,
figure, blockquote, dl, dd {
  margin-block-end: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1, h2, h3, h4,
button, input, label {
  line-height: 1.1;
}

/* Balance text wrapping on headings */
h1, h2,
h3, h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
  color: currentColor;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input, button,
textarea, select {
  font-family: inherit;
  font-size: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

/** End of CSS reset from https://piccalil.li/blog/a-more-modern-css-reset/ **/


/** Source: try-editor/editor/editor.css **/
:root {
    --light-theme-blue: #037ABA;
    --light-theme-blue-2: #044B86;
    --light-theme-blue-3: #eff6ff;
    --light-theme-turquoise: #0D8280;
    --light-theme-green: #27862A;
    --light-theme-bright-green: #1ec31e;
    --light-theme-red: #d71f0a;
    --light-theme-orange: #BE5A09;
    --light-theme-pink: #E00B87;
    --light-theme-yellow: #946C00;
    --light-theme-gray: #75715e;
    --light-theme-gray-2: #949494;
    --light-theme-gray-3: #C8C8C8;
    --light-theme-gray-4: #555555;
    --light-theme-border: #E6E6E6;
    --light-theme-border-emph: #A6A6A6;
    --light-theme-text: #464646;
    --light-theme-text-emph: #060606;
    --light-theme-shade: #fafafa;

    --dark-theme-blue: #238fca;
    --dark-theme-blue-2: #55b0fc;
    --dark-theme-blue-3: #2a2c2c;
    --dark-theme-turquoise: #14bbb7;
    --dark-theme-green: #44c948;
    --dark-theme-bright-green: #13ad13;
    --dark-theme-red: #F4301A;
    --dark-theme-orange: #d56c16;
    --dark-theme-pink: #ea68d9;
    --dark-theme-yellow: #cf9d02;
    --dark-theme-gray: #8A8A8A;
    --dark-theme-gray-2: #5b5a5a;
    --dark-theme-gray-3: #f8f8f2;
    --dark-theme-gray-4: #b0b0b0;
    --dark-theme-black: #161717;
    --dark-theme-border: #373d3e;
    --dark-theme-border-emph: #878d8e;
    --dark-theme-text: #b0b0b0;
    --dark-theme-text-emph: #f0f0f0;
    --dark-theme-shade: #252626;
}

/**** PROBLEMS ****/

#problems {
    padding: 20px;
    width: 680px;
    height: 100%;
    font-size: 13px;
    background: white;
    box-sizing: border-box;
}

/* .theme-dark #problems {
    background: var(--dark-theme-black);
    color: var(--dark-theme-gray-4);
} */

#problems .problem-container {
    position: relative;
    background: inherit;
}

#problems .problem-header {
    display: flex;
    justify-content: space-between;
    width: 100%;
    background: inherit;
}

#problems .problem-module {
    background: inherit;
}

#problems .problem-title {
    color: var(--dark-theme-blue);
    background: inherit;
    z-index: 1;
    margin-left: 10px;
    padding: 0 10px;
}

#problems .problem-navigation {
    background: inherit;
    z-index: 1;
    margin-right: 10px;
}

#problems .problem-header:before {
    content: '';
    position: absolute;
    width: 100%;
    height: 1px;
    background: var(--light-theme-border);
    top: 10px;
}

.theme-dark #problems .problem-header:before {
    background: var(--dark-theme-border);
}

#problems .problem-body {
    font-size: 13px;
    white-space: pre;
    margin-top: 20px;
}

#problems .problem-region {
    display: inline-block;
    background: inherit;
    z-index: 1;
    padding: 0 10px;
}

#problems .problem-region:empty {
    padding: 0;
}


/**** COLORS ****/

.blue     { color: var(--light-theme-blue); }
.darkblue { color: var(--light-theme-blue-2); }
.green    { color: var(--light-theme-green); }
.red      { color: var(--light-theme-red); }
.magenta  { color: var(--light-theme-pink); }
.yellow   { color: var(--light-theme-yellow); }
.cyan     { color: var(--light-theme-turquoise); }
.white    { color: white; }
.black    { color: black; }

.theme-dark .blue     { color: var(--dark-theme-blue); }
.theme-dark .green    { color: var(--dark-theme-green); }
.theme-dark .red      { color: var(--dark-theme-red); }
.theme-dark .magenta  { color: var(--dark-theme-pink); }
.theme-dark .yellow   { color: var(--dark-theme-yellow); }
.theme-dark .cyan     { color: var(--dark-theme-turquoise); }


.background.lightblue { background: var(--light-theme-blue-3); }

.theme-dark .background.lightblue { background: var(--dark-theme-blue-3); }

.bold { font-weight: bold; }
.underline { text-decoration: underline; }


/**** CODE MIRROR ****/

.CodeMirror {
    height: 100%;
    line-height: 1.25;
    font-size: 14px;
}

.CodeMirror-linenumber {
    padding: 1px 5px 0 5px;
}

/**** DARK MODE ****/

/* .cm-s-dark.CodeMirror { background: var(--dark-theme-black); color: var(--dark-theme-gray-3); } */

.cm-s-dark div.CodeMirror-selected { background: var(--dark-theme-blue-3); }

.cm-s-dark .CodeMirror-line::selection,
.cm-s-dark .CodeMirror-line > span::selection,
.cm-s-dark .CodeMirror-line > span > span::selection
    { background: var(--dark-theme-blue-3); }

.cm-s-dark .CodeMirror-line::-moz-selection,
.cm-s-dark .CodeMirror-line > span::-moz-selection,
.cm-s-dark .CodeMirror-line > span > span::-moz-selection
    { background: var(--dark-theme-blue-3); }

/* gutters */

.cm-s-dark .CodeMirror-gutters                { background: var(--dark-theme-black); border-right: 0px; }
.cm-s-dark .CodeMirror-guttermarker           { color: white; }
.cm-s-dark .CodeMirror-guttermarker-subtle    { color: var(--dark-theme-gray-2); }
.cm-s-dark .CodeMirror-linenumber             { color: var(--dark-theme-gray-2); }
.cm-s-dark .CodeMirror-activeline-background  { background: var(--dark-theme-blue-3); }
.cm-s-dark .CodeMirror-activeline-gutter      { background: var(--dark-theme-blue-3); }
.cm-s-dark .CodeMirror-cursor                 { border-left: 1px solid var(--dark-theme-gray-4); }

/* code */

.cm-s-dark span.cm-comment { color: var(--dark-theme-gray); }
.cm-s-dark span.cm-comment.cm-def { color: var(--dark-theme-blue-2); }

.cm-s-dark span.cm-keyword  { color: var(--dark-theme-blue); }
.cm-s-dark span.cm-builtin  { color: var(--dark-theme-blue); }
.cm-s-dark span.cm-string   { color: var(--dark-theme-pink); }
.cm-s-dark span.cm-number   { color: var(--dark-theme-yellow); }

.cm-s-dark span.cm-variable   { color: var(--dark-theme-gray-4); }
.cm-s-dark span.cm-variable-2 { color: var(--dark-theme-orange); }
.cm-s-dark span.cm-def        { color: var(--dark-theme-blue-2); }
.cm-s-dark span.cm-error      { color: var(--dark-theme-gray-4); background: var(--dark-theme-blue); }

.cm-s-dark span.CodeMirror-matchingbracket { color: var(--dark-theme-bright-green) !important; }


/**** LIGHT MODE ****/

/* .cm-s-light.CodeMirror { background: white; color: var(--light-theme-gray-3); } */

/* gutters */

.cm-s-light .CodeMirror-gutters               { background: white; border-right: 0px; }
.cm-s-light .CodeMirror-guttermarker          { color: white; }
.cm-s-light .CodeMirror-guttermarker-subtle   { color: var(--light-theme-gray-2); }
.cm-s-light .CodeMirror-linenumber            { color: var(--light-theme-gray-2); }
.cm-s-light .CodeMirror-activeline-gutter     { background: var(--light-theme-blue-3); }
.cm-s-light .CodeMirror-activeline-background { background: var(--light-theme-blue-3); }

/* code */

.cm-s-light span.cm-comment        { color: var(--light-theme-gray); }
.cm-s-light span.cm-comment.cm-def { color: var(--light-theme-blue-2); }

.cm-s-light span.cm-keyword { color: var(--light-theme-blue); }
.cm-s-light span.cm-builtin { color: var(--light-theme-blue-2); }
.cm-s-light span.cm-string  { color: var(--light-theme-pink); }
.cm-s-light span.cm-number  { color: var(--light-theme-yellow); }

.cm-s-light span.cm-variable   { color: var(--light-theme-gray-4); }
.cm-s-light span.cm-variable-2 { color: var(--light-theme-orange); }
.cm-s-light span.cm-def        { color: var(--light-theme-blue-2); }
.cm-s-light span.cm-error      { color: white; background: var(--light-theme-blue);  }

.cm-s-light span.CodeMirror-matchingbracket { color: var(--light-theme-bright-green) !important; }


/** End of content of try-editor/editor/editor.css **/

:root,
html[data-theme="light"] {
    --background: hsl(240, 100%, 99%);
    --background-translucent: hsla(240, 100%, 99%, 0.7);
    --background-striped: hsl(240, 9%, 93%);
    --text: hsl(240, 20%, 17%);
    --highlight: hsl(240, 70%, 90%);
}

html[data-theme="dark"] {
    --background: hsl(240, 20%, 17%);
    --background-translucent: hsla(240, 20%, 17%, 0.6);
    --background-striped: hsl(240, 14%, 25%);
    --text: hsl(240, 20%, 85%);
    --highlight: hsl(240, 20%, 30%);
}

.white {
    color: var(--text);
}

.black {
    color: var(--background);
}

body {
    display: flex;
    margin: 0;
    padding: 0;
    overflow: hidden;
    font-family: system-ui, sans-serif;
    color: var(--text);
    background: var(--background);
    overflow: auto;
}

#main {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    overflow: unset; /* needed for .sticky nav */
    min-width: 15rem;
}

header {
    display: flex;
    justify-content: stretch;
    align-items: center;
    margin-top: 0.2rem;

    > h1 {
        margin-top: 0;
    }

    > svg {
        width: 4rem; height: 4rem;
    }
}

#intro {
    margin: 0 1rem;
}

scheme-selector {
    /* TODO style it as a three-state switch https://dev.to/jimajs/how-to-create-a-three-state-toggle-switch-using-html-css-and-javascript-2e68 */
    position: absolute;
    top: 1rem;
    right: 1rem;
}

.CodeMirror {
    height: auto;
    background: transparent;
}

.CodeMirror,
.monospace {
    line-height: 1.25;
    font-size: 14px;
    font-family: 'Courier Prime', monospace;
}

.with-editor-lines-margin {
    padding: 2px;
    margin-left: 1px;
}

#problems {
    padding: 0;
    background: inherit;
}

ul.logs {
    list-style-type: none;
    padding: 0;
    margin: 0;

    &>li {
        padding: 0.5em 1em;
        background: var(--background);
        position: relative;

        >pre {
            margin: 0;
            margin-left: 0.3em;
            padding-left: 0.6em;
            border-left: 0.1em solid var(--text);
        }

        >menu {
            position:absolute;
            right: 1rem;
            top: 0;
            display: flex;
            gap: 0.6em;
            z-index: 5;
        }       

        &:nth-child(even) {
            background: var(--background-striped);
        }

        &+li {
            /* TODO don't use margin but padding because background is used for differentiation */
            margin-top: 1.2em;
        }

        #problems {
            width: 100%;
            overflow-x: auto;
        }
    }
}

menu {
    margin: 0;
    padding: 0;
}

button {
    padding: 0.35em 1em;
    background: var(--background);
    color: var(--text);
    cursor: pointer;
}

button, .repl-input-column {
    border: 2px solid var(--text);
    border-radius: 4px;
}

button:focus, button:hover, button:active {
    background: var(--highlight);
}

.label {
    background: var(--text);
    color: var(--background);
    padding: 0.2em 0.5em;
}

nav.sticky {
    display: flex;
    flex-direction: row;
    justify-content: stretch;
    justify-content: flex-end;
    align-items: center;
    /* for this to work inside a flex column, no parent (except `body`) may set `overflow`, see https://stackoverflow.com/a/58295375 */
    position: sticky;
    top: 0;
    z-index: 10;
    margin: 0 !important;
    padding: 0.6rem 1rem !important;

    .visible-if-sticky {
        display: none;
    }

    &.is-stuck {
        /* To detect this is-stuck state, an IntersectionObserver is used. For details, see https://stackoverflow.com/a/57991537 */
        background: var(--background-translucent);
        backdrop-filter: blur(4px);
        border-bottom: 2px solid var(--text);
        justify-content: space-between;

        .visible-if-sticky {
            display: block;
        }
    }

    scheme-selector {
        position: initial;
    }

    &:not(.is-stuck) {
        scheme-selector {
            display: none
        }
    }

    button {
        display: flex;
        flex: 1 0 auto;
        align-items: center;
        white-space: nowrap;
      
        > svg {
            width: 1.8em;
            height: 1.8em;
        }
    }

    > scheme-selector {
        position: relative;
        top: unset;
        right: unset;
    }
}

#input-row {
    display: flex;
    flex-direction: row;
    margin: 0.6rem 1rem 0.2rem 1rem;

    .repl-input-column {
        display: flex;
        flex-direction: column;
        flex: 1 1 auto;
        border: 2px solid var(--text);
        padding-left: 0.6em;
        padding-right: 0.6em;
    }
    
    button {
        margin-right: 0.6rem;

        svg {
            max-width: 3rem;
        }
    }
}

@media (width < 30rem) {
    #input-row button {
        padding: 0 0.1em;
    }
}

modal-dialog {
    /* Adapted from https://discourse.elm-lang.org/t/native-html-element-dialog-modal-opening-closing/9232 */
    dialog {
        padding: 1rem;
        background: var(--background);
        color: var(--text);
    }

    /* .modal-filler first dialog child needed to prevent closing on dialog padding */
    dialog:modal > .modal-filler {
        opacity: 0;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -10;
    }

    dialog::backdrop {
        background: rgb(0 0 0 / 0.8);
        backdrop-filter: blur(4px);
    }

    form {
        display: flex;
        flex-direction: column;
        gap: 1em;
    }
}

footer {
    text-align: right;
    margin: 0 1rem;
}
