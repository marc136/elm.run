{
  "Array": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "append",
      "empty",
      "filter",
      "foldl",
      "foldr",
      "fromList",
      "get",
      "indexedMap",
      "initialize",
      "isEmpty",
      "length",
      "map",
      "push",
      "repeat",
      "set",
      "slice",
      "toIndexedList",
      "toList"
    ],
    "aliases": [],
    "types": {
      "Array": []
    }
  },
  "Basics": {
    "pkg": "elm/core",
    "ops": [
      "&&",
      "*",
      "+",
      "++",
      "-",
      "/",
      "//",
      "/=",
      "<",
      "<<",
      "<=",
      "<|",
      "==",
      ">",
      ">=",
      ">>",
      "^",
      "|>",
      "||"
    ],
    "values": [
      "abs",
      "acos",
      "always",
      "asin",
      "atan",
      "atan2",
      "ceiling",
      "clamp",
      "compare",
      "cos",
      "degrees",
      "e",
      "floor",
      "fromPolar",
      "identity",
      "isInfinite",
      "isNaN",
      "logBase",
      "max",
      "min",
      "modBy",
      "negate",
      "never",
      "not",
      "pi",
      "radians",
      "remainderBy",
      "round",
      "sin",
      "sqrt",
      "tan",
      "toFloat",
      "toPolar",
      "truncate",
      "turns",
      "xor"
    ],
    "aliases": [],
    "types": {
      "Bool": [
        "True",
        "False"
      ],
      "Float": [],
      "Int": [],
      "Never": [],
      "Order": [
        "LT",
        "EQ",
        "GT"
      ]
    }
  },
  "Bitwise": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "and",
      "complement",
      "or",
      "shiftLeftBy",
      "shiftRightBy",
      "shiftRightZfBy",
      "xor"
    ],
    "aliases": [],
    "types": {}
  },
  "Browser": {
    "pkg": "elm/browser",
    "ops": [],
    "values": [
      "application",
      "document",
      "element",
      "sandbox"
    ],
    "aliases": [
      "Document"
    ],
    "types": {
      "UrlRequest": [
        "Internal",
        "External"
      ]
    }
  },
  "Browser.Dom": {
    "pkg": "elm/browser",
    "ops": [],
    "values": [
      "blur",
      "focus",
      "getElement",
      "getViewport",
      "getViewportOf",
      "setViewport",
      "setViewportOf"
    ],
    "aliases": [
      "Element",
      "Viewport"
    ],
    "types": {
      "Error": [
        "NotFound"
      ]
    }
  },
  "Browser.Events": {
    "pkg": "elm/browser",
    "ops": [],
    "values": [
      "onAnimationFrame",
      "onAnimationFrameDelta",
      "onClick",
      "onKeyDown",
      "onKeyPress",
      "onKeyUp",
      "onMouseDown",
      "onMouseMove",
      "onMouseUp",
      "onResize",
      "onVisibilityChange"
    ],
    "aliases": [],
    "types": {
      "Visibility": [
        "Visible",
        "Hidden"
      ]
    }
  },
  "Browser.Navigation": {
    "pkg": "elm/browser",
    "ops": [],
    "values": [
      "back",
      "forward",
      "load",
      "pushUrl",
      "reload",
      "reloadAndSkipCache",
      "replaceUrl"
    ],
    "aliases": [],
    "types": {
      "Key": []
    }
  },
  "Char": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "fromCode",
      "isAlpha",
      "isAlphaNum",
      "isDigit",
      "isHexDigit",
      "isLower",
      "isOctDigit",
      "isUpper",
      "toCode",
      "toLocaleLower",
      "toLocaleUpper",
      "toLower",
      "toUpper"
    ],
    "aliases": [],
    "types": {
      "Char": []
    }
  },
  "Debug": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "log",
      "toString",
      "todo"
    ],
    "aliases": [],
    "types": {}
  },
  "Dict": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "diff",
      "empty",
      "filter",
      "foldl",
      "foldr",
      "fromList",
      "get",
      "insert",
      "intersect",
      "isEmpty",
      "keys",
      "map",
      "member",
      "merge",
      "partition",
      "remove",
      "singleton",
      "size",
      "toList",
      "union",
      "update",
      "values"
    ],
    "aliases": [],
    "types": {
      "Dict": []
    }
  },
  "File": {
    "pkg": "elm/file",
    "ops": [],
    "values": [
      "decoder",
      "lastModified",
      "mime",
      "name",
      "size",
      "toBytes",
      "toString",
      "toUrl"
    ],
    "aliases": [],
    "types": {
      "File": []
    }
  },
  "File.Download": {
    "pkg": "elm/file",
    "ops": [],
    "values": [
      "bytes",
      "string",
      "url"
    ],
    "aliases": [],
    "types": {}
  },
  "File.Select": {
    "pkg": "elm/file",
    "ops": [],
    "values": [
      "file",
      "files"
    ],
    "aliases": [],
    "types": {}
  },
  "Html": {
    "pkg": "elm/html",
    "ops": [],
    "values": [
      "a",
      "abbr",
      "address",
      "article",
      "aside",
      "audio",
      "b",
      "bdi",
      "bdo",
      "blockquote",
      "br",
      "button",
      "canvas",
      "caption",
      "cite",
      "code",
      "col",
      "colgroup",
      "datalist",
      "dd",
      "del",
      "details",
      "dfn",
      "div",
      "dl",
      "dt",
      "em",
      "embed",
      "fieldset",
      "figcaption",
      "figure",
      "footer",
      "form",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "header",
      "hr",
      "i",
      "iframe",
      "img",
      "input",
      "ins",
      "kbd",
      "label",
      "legend",
      "li",
      "main_",
      "map",
      "mark",
      "math",
      "menu",
      "menuitem",
      "meter",
      "nav",
      "node",
      "object",
      "ol",
      "optgroup",
      "option",
      "output",
      "p",
      "param",
      "pre",
      "progress",
      "q",
      "rp",
      "rt",
      "ruby",
      "s",
      "samp",
      "section",
      "select",
      "small",
      "source",
      "span",
      "strong",
      "sub",
      "summary",
      "sup",
      "table",
      "tbody",
      "td",
      "text",
      "textarea",
      "tfoot",
      "th",
      "thead",
      "time",
      "tr",
      "track",
      "u",
      "ul",
      "var",
      "video",
      "wbr"
    ],
    "aliases": [
      "Attribute",
      "Html"
    ],
    "types": {}
  },
  "Html.Attributes": {
    "pkg": "elm/html",
    "ops": [],
    "values": [
      "accept",
      "acceptCharset",
      "accesskey",
      "action",
      "align",
      "alt",
      "attribute",
      "autocomplete",
      "autofocus",
      "autoplay",
      "checked",
      "cite",
      "class",
      "classList",
      "cols",
      "colspan",
      "contenteditable",
      "contextmenu",
      "controls",
      "coords",
      "datetime",
      "default",
      "dir",
      "disabled",
      "download",
      "draggable",
      "dropzone",
      "enctype",
      "for",
      "form",
      "headers",
      "height",
      "hidden",
      "href",
      "hreflang",
      "id",
      "ismap",
      "itemprop",
      "kind",
      "lang",
      "list",
      "loop",
      "manifest",
      "map",
      "max",
      "maxlength",
      "media",
      "method",
      "min",
      "minlength",
      "multiple",
      "name",
      "novalidate",
      "pattern",
      "ping",
      "placeholder",
      "poster",
      "preload",
      "property",
      "pubdate",
      "readonly",
      "rel",
      "required",
      "reversed",
      "rows",
      "rowspan",
      "sandbox",
      "scope",
      "selected",
      "shape",
      "size",
      "spellcheck",
      "src",
      "srcdoc",
      "srclang",
      "start",
      "step",
      "style",
      "tabindex",
      "target",
      "title",
      "type_",
      "usemap",
      "value",
      "width",
      "wrap"
    ],
    "aliases": [],
    "types": {}
  },
  "Html.Events": {
    "pkg": "elm/html",
    "ops": [],
    "values": [
      "custom",
      "keyCode",
      "on",
      "onBlur",
      "onCheck",
      "onClick",
      "onDoubleClick",
      "onFocus",
      "onInput",
      "onMouseDown",
      "onMouseEnter",
      "onMouseLeave",
      "onMouseOut",
      "onMouseOver",
      "onMouseUp",
      "onSubmit",
      "preventDefaultOn",
      "stopPropagationOn",
      "targetChecked",
      "targetValue"
    ],
    "aliases": [],
    "types": {}
  },
  "Html.Keyed": {
    "pkg": "elm/html",
    "ops": [],
    "values": [
      "node",
      "ol",
      "ul"
    ],
    "aliases": [],
    "types": {}
  },
  "Html.Lazy": {
    "pkg": "elm/html",
    "ops": [],
    "values": [
      "lazy",
      "lazy2",
      "lazy3",
      "lazy4",
      "lazy5",
      "lazy6",
      "lazy7",
      "lazy8"
    ],
    "aliases": [],
    "types": {}
  },
  "Http": {
    "pkg": "elm/http",
    "ops": [],
    "values": [
      "bytesBody",
      "bytesPart",
      "bytesResolver",
      "cancel",
      "emptyBody",
      "expectBytes",
      "expectBytesResponse",
      "expectJson",
      "expectString",
      "expectStringResponse",
      "expectWhatever",
      "fileBody",
      "filePart",
      "fractionReceived",
      "fractionSent",
      "get",
      "header",
      "jsonBody",
      "multipartBody",
      "post",
      "request",
      "riskyRequest",
      "riskyTask",
      "stringBody",
      "stringPart",
      "stringResolver",
      "task",
      "track"
    ],
    "aliases": [
      "Metadata"
    ],
    "types": {
      "Body": [],
      "Error": [
        "BadUrl",
        "Timeout",
        "NetworkError",
        "BadStatus",
        "BadBody"
      ],
      "Expect": [],
      "Header": [],
      "Part": [],
      "Progress": [
        "Sending",
        "Receiving"
      ],
      "Resolver": [],
      "Response": [
        "BadUrl_",
        "Timeout_",
        "NetworkError_",
        "BadStatus_",
        "GoodStatus_"
      ]
    }
  },
  "Json.Decode": {
    "pkg": "elm/json",
    "ops": [],
    "values": [
      "andThen",
      "array",
      "at",
      "bool",
      "decodeString",
      "decodeValue",
      "dict",
      "errorToString",
      "fail",
      "field",
      "float",
      "index",
      "int",
      "keyValuePairs",
      "lazy",
      "list",
      "map",
      "map2",
      "map3",
      "map4",
      "map5",
      "map6",
      "map7",
      "map8",
      "maybe",
      "null",
      "nullable",
      "oneOf",
      "oneOrMore",
      "string",
      "succeed",
      "value"
    ],
    "aliases": [
      "Value"
    ],
    "types": {
      "Decoder": [],
      "Error": [
        "Field",
        "Index",
        "OneOf",
        "Failure"
      ]
    }
  },
  "Json.Encode": {
    "pkg": "elm/json",
    "ops": [],
    "values": [
      "array",
      "bool",
      "dict",
      "encode",
      "float",
      "int",
      "list",
      "null",
      "object",
      "set",
      "string"
    ],
    "aliases": [],
    "types": {
      "Value": []
    }
  },
  "List": {
    "pkg": "elm/core",
    "ops": [
      "::"
    ],
    "values": [
      "all",
      "any",
      "append",
      "concat",
      "concatMap",
      "drop",
      "filter",
      "filterMap",
      "foldl",
      "foldr",
      "head",
      "indexedMap",
      "intersperse",
      "isEmpty",
      "length",
      "map",
      "map2",
      "map3",
      "map4",
      "map5",
      "maximum",
      "member",
      "minimum",
      "partition",
      "product",
      "range",
      "repeat",
      "reverse",
      "singleton",
      "sort",
      "sortBy",
      "sortWith",
      "sum",
      "tail",
      "take",
      "unzip"
    ],
    "aliases": [],
    "types": {}
  },
  "Math.Matrix4": {
    "pkg": "elm-explorations/linear-algebra",
    "ops": [],
    "values": [
      "fromRecord",
      "identity",
      "inverse",
      "inverseOrthonormal",
      "makeBasis",
      "makeFrustum",
      "makeLookAt",
      "makeOrtho",
      "makeOrtho2D",
      "makePerspective",
      "makeRotate",
      "makeScale",
      "makeScale3",
      "makeTranslate",
      "makeTranslate3",
      "mul",
      "mulAffine",
      "rotate",
      "scale",
      "scale3",
      "toRecord",
      "transform",
      "translate",
      "translate3",
      "transpose"
    ],
    "aliases": [],
    "types": {
      "Mat4": []
    }
  },
  "Math.Vector2": {
    "pkg": "elm-explorations/linear-algebra",
    "ops": [],
    "values": [
      "add",
      "direction",
      "distance",
      "distanceSquared",
      "dot",
      "fromRecord",
      "getX",
      "getY",
      "length",
      "lengthSquared",
      "negate",
      "normalize",
      "scale",
      "setX",
      "setY",
      "sub",
      "toRecord",
      "vec2"
    ],
    "aliases": [],
    "types": {
      "Vec2": []
    }
  },
  "Math.Vector3": {
    "pkg": "elm-explorations/linear-algebra",
    "ops": [],
    "values": [
      "add",
      "cross",
      "direction",
      "distance",
      "distanceSquared",
      "dot",
      "fromRecord",
      "getX",
      "getY",
      "getZ",
      "i",
      "j",
      "k",
      "length",
      "lengthSquared",
      "negate",
      "normalize",
      "scale",
      "setX",
      "setY",
      "setZ",
      "sub",
      "toRecord",
      "vec3"
    ],
    "aliases": [],
    "types": {
      "Vec3": []
    }
  },
  "Math.Vector4": {
    "pkg": "elm-explorations/linear-algebra",
    "ops": [],
    "values": [
      "add",
      "direction",
      "distance",
      "distanceSquared",
      "dot",
      "fromRecord",
      "getW",
      "getX",
      "getY",
      "getZ",
      "length",
      "lengthSquared",
      "negate",
      "normalize",
      "scale",
      "setW",
      "setX",
      "setY",
      "setZ",
      "sub",
      "toRecord",
      "vec4"
    ],
    "aliases": [],
    "types": {
      "Vec4": []
    }
  },
  "Maybe": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "andThen",
      "map",
      "map2",
      "map3",
      "map4",
      "map5",
      "withDefault"
    ],
    "aliases": [],
    "types": {
      "Maybe": [
        "Just",
        "Nothing"
      ]
    }
  },
  "Platform": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "sendToApp",
      "sendToSelf",
      "worker"
    ],
    "aliases": [],
    "types": {
      "ProcessId": [],
      "Program": [],
      "Router": [],
      "Task": []
    }
  },
  "Platform.Cmd": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "batch",
      "map",
      "none"
    ],
    "aliases": [],
    "types": {
      "Cmd": []
    }
  },
  "Platform.Sub": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "batch",
      "map",
      "none"
    ],
    "aliases": [],
    "types": {
      "Sub": []
    }
  },
  "Playground": {
    "pkg": "evancz/elm-playground",
    "ops": [],
    "values": [
      "animation",
      "black",
      "blue",
      "brown",
      "charcoal",
      "circle",
      "darkBlue",
      "darkBrown",
      "darkCharcoal",
      "darkGray",
      "darkGreen",
      "darkGrey",
      "darkOrange",
      "darkPurple",
      "darkRed",
      "darkYellow",
      "fade",
      "game",
      "gray",
      "green",
      "grey",
      "group",
      "hexagon",
      "image",
      "lightBlue",
      "lightBrown",
      "lightCharcoal",
      "lightGray",
      "lightGreen",
      "lightGrey",
      "lightOrange",
      "lightPurple",
      "lightRed",
      "lightYellow",
      "move",
      "moveDown",
      "moveLeft",
      "moveRight",
      "moveUp",
      "moveX",
      "moveY",
      "octagon",
      "orange",
      "oval",
      "pentagon",
      "picture",
      "polygon",
      "purple",
      "rectangle",
      "red",
      "rgb",
      "rotate",
      "scale",
      "spin",
      "square",
      "toX",
      "toXY",
      "toY",
      "triangle",
      "wave",
      "white",
      "words",
      "yellow",
      "zigzag"
    ],
    "aliases": [
      "Computer",
      "Keyboard",
      "Mouse",
      "Number",
      "Screen"
    ],
    "types": {
      "Color": [],
      "Shape": [],
      "Time": []
    }
  },
  "Process": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "kill",
      "sleep",
      "spawn"
    ],
    "aliases": [
      "Id"
    ],
    "types": {}
  },
  "Random": {
    "pkg": "elm/random",
    "ops": [],
    "values": [
      "andThen",
      "constant",
      "float",
      "generate",
      "independentSeed",
      "initialSeed",
      "int",
      "lazy",
      "list",
      "map",
      "map2",
      "map3",
      "map4",
      "map5",
      "maxInt",
      "minInt",
      "pair",
      "step",
      "uniform",
      "weighted"
    ],
    "aliases": [],
    "types": {
      "Generator": [],
      "Seed": []
    }
  },
  "Result": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "andThen",
      "fromMaybe",
      "map",
      "map2",
      "map3",
      "map4",
      "map5",
      "mapError",
      "toMaybe",
      "withDefault"
    ],
    "aliases": [],
    "types": {
      "Result": [
        "Ok",
        "Err"
      ]
    }
  },
  "Set": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "diff",
      "empty",
      "filter",
      "foldl",
      "foldr",
      "fromList",
      "insert",
      "intersect",
      "isEmpty",
      "map",
      "member",
      "partition",
      "remove",
      "singleton",
      "size",
      "toList",
      "union"
    ],
    "aliases": [],
    "types": {
      "Set": []
    }
  },
  "String": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "all",
      "any",
      "append",
      "concat",
      "cons",
      "contains",
      "dropLeft",
      "dropRight",
      "endsWith",
      "filter",
      "foldl",
      "foldr",
      "fromChar",
      "fromFloat",
      "fromInt",
      "fromList",
      "indexes",
      "indices",
      "isEmpty",
      "join",
      "left",
      "length",
      "lines",
      "map",
      "pad",
      "padLeft",
      "padRight",
      "repeat",
      "replace",
      "reverse",
      "right",
      "slice",
      "split",
      "startsWith",
      "toFloat",
      "toInt",
      "toList",
      "toLower",
      "toUpper",
      "trim",
      "trimLeft",
      "trimRight",
      "uncons",
      "words"
    ],
    "aliases": [],
    "types": {
      "String": []
    }
  },
  "Svg": {
    "pkg": "elm/svg",
    "ops": [],
    "values": [
      "a",
      "altGlyph",
      "altGlyphDef",
      "altGlyphItem",
      "animate",
      "animateColor",
      "animateMotion",
      "animateTransform",
      "circle",
      "clipPath",
      "colorProfile",
      "cursor",
      "defs",
      "desc",
      "ellipse",
      "feBlend",
      "feColorMatrix",
      "feComponentTransfer",
      "feComposite",
      "feConvolveMatrix",
      "feDiffuseLighting",
      "feDisplacementMap",
      "feDistantLight",
      "feFlood",
      "feFuncA",
      "feFuncB",
      "feFuncG",
      "feFuncR",
      "feGaussianBlur",
      "feImage",
      "feMerge",
      "feMergeNode",
      "feMorphology",
      "feOffset",
      "fePointLight",
      "feSpecularLighting",
      "feSpotLight",
      "feTile",
      "feTurbulence",
      "filter",
      "font",
      "foreignObject",
      "g",
      "glyph",
      "glyphRef",
      "image",
      "line",
      "linearGradient",
      "map",
      "marker",
      "mask",
      "metadata",
      "mpath",
      "node",
      "path",
      "pattern",
      "polygon",
      "polyline",
      "radialGradient",
      "rect",
      "set",
      "stop",
      "style",
      "svg",
      "switch",
      "symbol",
      "text",
      "textPath",
      "text_",
      "title",
      "tref",
      "tspan",
      "use",
      "view"
    ],
    "aliases": [
      "Attribute",
      "Svg"
    ],
    "types": {}
  },
  "Svg.Attributes": {
    "pkg": "elm/svg",
    "ops": [],
    "values": [
      "accelerate",
      "accentHeight",
      "accumulate",
      "additive",
      "alignmentBaseline",
      "allowReorder",
      "alphabetic",
      "amplitude",
      "arabicForm",
      "ascent",
      "attributeName",
      "attributeType",
      "autoReverse",
      "azimuth",
      "baseFrequency",
      "baseProfile",
      "baselineShift",
      "bbox",
      "begin",
      "bias",
      "by",
      "calcMode",
      "capHeight",
      "class",
      "clip",
      "clipPath",
      "clipPathUnits",
      "clipRule",
      "color",
      "colorInterpolation",
      "colorInterpolationFilters",
      "colorProfile",
      "colorRendering",
      "contentScriptType",
      "contentStyleType",
      "cursor",
      "cx",
      "cy",
      "d",
      "decelerate",
      "descent",
      "diffuseConstant",
      "direction",
      "display",
      "divisor",
      "dominantBaseline",
      "dur",
      "dx",
      "dy",
      "edgeMode",
      "elevation",
      "enableBackground",
      "end",
      "exponent",
      "externalResourcesRequired",
      "fill",
      "fillOpacity",
      "fillRule",
      "filter",
      "filterRes",
      "filterUnits",
      "floodColor",
      "floodOpacity",
      "fontFamily",
      "fontSize",
      "fontSizeAdjust",
      "fontStretch",
      "fontStyle",
      "fontVariant",
      "fontWeight",
      "format",
      "from",
      "fx",
      "fy",
      "g1",
      "g2",
      "glyphName",
      "glyphOrientationHorizontal",
      "glyphOrientationVertical",
      "glyphRef",
      "gradientTransform",
      "gradientUnits",
      "hanging",
      "height",
      "horizAdvX",
      "horizOriginX",
      "horizOriginY",
      "id",
      "ideographic",
      "imageRendering",
      "in2",
      "in_",
      "intercept",
      "k",
      "k1",
      "k2",
      "k3",
      "k4",
      "kernelMatrix",
      "kernelUnitLength",
      "kerning",
      "keyPoints",
      "keySplines",
      "keyTimes",
      "lang",
      "lengthAdjust",
      "letterSpacing",
      "lightingColor",
      "limitingConeAngle",
      "local",
      "markerEnd",
      "markerHeight",
      "markerMid",
      "markerStart",
      "markerUnits",
      "markerWidth",
      "mask",
      "maskContentUnits",
      "maskUnits",
      "mathematical",
      "max",
      "media",
      "method",
      "min",
      "mode",
      "name",
      "numOctaves",
      "offset",
      "opacity",
      "operator",
      "order",
      "orient",
      "orientation",
      "origin",
      "overflow",
      "overlinePosition",
      "overlineThickness",
      "panose1",
      "path",
      "pathLength",
      "patternContentUnits",
      "patternTransform",
      "patternUnits",
      "pointOrder",
      "pointerEvents",
      "points",
      "pointsAtX",
      "pointsAtY",
      "pointsAtZ",
      "preserveAlpha",
      "preserveAspectRatio",
      "primitiveUnits",
      "r",
      "radius",
      "refX",
      "refY",
      "renderingIntent",
      "repeatCount",
      "repeatDur",
      "requiredExtensions",
      "requiredFeatures",
      "restart",
      "result",
      "rotate",
      "rx",
      "ry",
      "scale",
      "seed",
      "shapeRendering",
      "slope",
      "spacing",
      "specularConstant",
      "specularExponent",
      "speed",
      "spreadMethod",
      "startOffset",
      "stdDeviation",
      "stemh",
      "stemv",
      "stitchTiles",
      "stopColor",
      "stopOpacity",
      "strikethroughPosition",
      "strikethroughThickness",
      "string",
      "stroke",
      "strokeDasharray",
      "strokeDashoffset",
      "strokeLinecap",
      "strokeLinejoin",
      "strokeMiterlimit",
      "strokeOpacity",
      "strokeWidth",
      "style",
      "surfaceScale",
      "systemLanguage",
      "tableValues",
      "target",
      "targetX",
      "targetY",
      "textAnchor",
      "textDecoration",
      "textLength",
      "textRendering",
      "title",
      "to",
      "transform",
      "type_",
      "u1",
      "u2",
      "underlinePosition",
      "underlineThickness",
      "unicode",
      "unicodeBidi",
      "unicodeRange",
      "unitsPerEm",
      "vAlphabetic",
      "vHanging",
      "vIdeographic",
      "vMathematical",
      "values",
      "version",
      "vertAdvY",
      "vertOriginX",
      "vertOriginY",
      "viewBox",
      "viewTarget",
      "visibility",
      "width",
      "widths",
      "wordSpacing",
      "writingMode",
      "x",
      "x1",
      "x2",
      "xChannelSelector",
      "xHeight",
      "xlinkActuate",
      "xlinkArcrole",
      "xlinkHref",
      "xlinkRole",
      "xlinkShow",
      "xlinkTitle",
      "xlinkType",
      "xmlBase",
      "xmlLang",
      "xmlSpace",
      "y",
      "y1",
      "y2",
      "yChannelSelector",
      "z",
      "zoomAndPan"
    ],
    "aliases": [],
    "types": {}
  },
  "Svg.Events": {
    "pkg": "elm/svg",
    "ops": [],
    "values": [
      "custom",
      "on",
      "onClick",
      "onMouseDown",
      "onMouseOut",
      "onMouseOver",
      "onMouseUp",
      "preventDefaultOn",
      "stopPropagationOn"
    ],
    "aliases": [],
    "types": {}
  },
  "Svg.Keyed": {
    "pkg": "elm/svg",
    "ops": [],
    "values": [
      "node"
    ],
    "aliases": [],
    "types": {}
  },
  "Svg.Lazy": {
    "pkg": "elm/svg",
    "ops": [],
    "values": [
      "lazy",
      "lazy2",
      "lazy3",
      "lazy4",
      "lazy5",
      "lazy6",
      "lazy7",
      "lazy8"
    ],
    "aliases": [],
    "types": {}
  },
  "Task": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "andThen",
      "attempt",
      "fail",
      "map",
      "map2",
      "map3",
      "map4",
      "map5",
      "mapError",
      "onError",
      "perform",
      "sequence",
      "succeed"
    ],
    "aliases": [
      "Task"
    ],
    "types": {}
  },
  "Time": {
    "pkg": "elm/time",
    "ops": [],
    "values": [
      "customZone",
      "every",
      "getZoneName",
      "here",
      "millisToPosix",
      "now",
      "posixToMillis",
      "toDay",
      "toHour",
      "toMillis",
      "toMinute",
      "toMonth",
      "toSecond",
      "toWeekday",
      "toYear",
      "utc"
    ],
    "aliases": [],
    "types": {
      "Month": [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      "Posix": [],
      "Weekday": [
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat",
        "Sun"
      ],
      "Zone": [],
      "ZoneName": [
        "Name",
        "Offset"
      ]
    }
  },
  "Tuple": {
    "pkg": "elm/core",
    "ops": [],
    "values": [
      "first",
      "mapBoth",
      "mapFirst",
      "mapSecond",
      "pair",
      "second"
    ],
    "aliases": [],
    "types": {}
  },
  "WebGL": {
    "pkg": "elm-explorations/webgl",
    "ops": [],
    "values": [
      "alpha",
      "antialias",
      "clearColor",
      "depth",
      "entity",
      "entityWith",
      "indexedTriangles",
      "lineLoop",
      "lineStrip",
      "lines",
      "points",
      "preserveDrawingBuffer",
      "stencil",
      "toHtml",
      "toHtmlWith",
      "triangleFan",
      "triangleStrip",
      "triangles"
    ],
    "aliases": [
      "Option"
    ],
    "types": {
      "Entity": [],
      "Mesh": [],
      "Shader": []
    }
  },
  "WebGL.Settings": {
    "pkg": "elm-explorations/webgl",
    "ops": [],
    "values": [
      "back",
      "colorMask",
      "cullFace",
      "front",
      "frontAndBack",
      "polygonOffset",
      "sampleAlphaToCoverage",
      "sampleCoverage",
      "scissor"
    ],
    "aliases": [
      "Setting"
    ],
    "types": {
      "FaceMode": []
    }
  },
  "WebGL.Settings.Blend": {
    "pkg": "elm-explorations/webgl",
    "ops": [],
    "values": [
      "add",
      "constantAlpha",
      "constantColor",
      "custom",
      "customAdd",
      "customReverseSubtract",
      "customSubtract",
      "dstAlpha",
      "dstColor",
      "one",
      "oneMinusConstantAlpha",
      "oneMinusConstantColor",
      "oneMinusDstAlpha",
      "oneMinusDstColor",
      "oneMinusSrcAlpha",
      "oneMinusSrcColor",
      "reverseSubtract",
      "srcAlpha",
      "srcAlphaSaturate",
      "srcColor",
      "subtract",
      "zero"
    ],
    "aliases": [],
    "types": {
      "Blender": [],
      "Factor": []
    }
  },
  "WebGL.Settings.DepthTest": {
    "pkg": "elm-explorations/webgl",
    "ops": [],
    "values": [
      "always",
      "default",
      "equal",
      "greater",
      "greaterOrEqual",
      "less",
      "lessOrEqual",
      "never",
      "notEqual"
    ],
    "aliases": [
      "Options"
    ],
    "types": {}
  },
  "WebGL.Settings.StencilTest": {
    "pkg": "elm-explorations/webgl",
    "ops": [],
    "values": [
      "always",
      "decrement",
      "decrementWrap",
      "equal",
      "greater",
      "greaterOrEqual",
      "increment",
      "incrementWrap",
      "invert",
      "keep",
      "less",
      "lessOrEqual",
      "never",
      "notEqual",
      "replace",
      "test",
      "testSeparate",
      "zero"
    ],
    "aliases": [],
    "types": {
      "Operation": [],
      "Test": []
    }
  },
  "WebGL.Texture": {
    "pkg": "elm-explorations/webgl",
    "ops": [],
    "values": [
      "clampToEdge",
      "defaultOptions",
      "linear",
      "linearMipmapLinear",
      "linearMipmapNearest",
      "load",
      "loadWith",
      "mirroredRepeat",
      "nearest",
      "nearestMipmapLinear",
      "nearestMipmapNearest",
      "nonPowerOfTwoOptions",
      "repeat",
      "size"
    ],
    "aliases": [
      "Options"
    ],
    "types": {
      "Bigger": [],
      "Error": [
        "LoadError",
        "SizeError"
      ],
      "Resize": [],
      "Smaller": [],
      "Texture": [],
      "Wrap": []
    }
  }
}
